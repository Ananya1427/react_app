{"ast":null,"code":"var _jsxFileName = \"/Users/venkat/Downloads/React/Food_App/react_app/src/Pages/Partner/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  id,\n  images,\n  setImages\n}) => {\n  _s();\n  const {\n    user\n  } = useSelector(state => ({\n    ...state\n  }));\n  const [loading, setLoading] = useState(false);\n  const fileUploadAndResize = e => {\n    e.preventDefault();\n    let files = e.target.files; // 3\n    let allUploadedFiles = images && images.urls || [];\n    let idToken = user ? user.token : '';\n    if (files) {\n      setLoading(true);\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(files[i], 720, 720, 'JPEG', 100, 0, uri => {\n          axios.post(`${process.env.REACT_APP_API}/uploadimages`, {\n            image: uri\n          }, {\n            headers: {\n              idToken\n            }\n          }).then(res => {\n            if (res.status === 200) {\n              const {\n                public_id,\n                url,\n                message\n              } = res.data;\n              toast.success(message);\n              allUploadedFiles.push({\n                public_id,\n                url\n              });\n              setImages({\n                ...images,\n                urls: allUploadedFiles\n              });\n              // localStorage.setItem('uploadedImages', { ...images, urls: allUploadedFiles });\n            } else {\n              toast.error(res.data.message);\n            }\n            setLoading(false);\n          }).catch(error => {\n            setLoading(false);\n            toast.error(error);\n          });\n        }, 'base64');\n      }\n    }\n    // send back to server to upload to cloudinary\n    // set url to images[] in the parent component state - ProductCreate\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"btn btn-filled btn-raised\",\n      children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        accept: \"images/*\",\n        onChange: fileUploadAndResize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: images && images.urls && images.urls.map(image => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          count: \"X\",\n          onClick: () => handleImageRemove(image.public_id),\n          style: {\n            cursor: 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: image.url,\n            size: 100,\n            shape: \"square\",\n            className: \"ml-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)\n        }, image.public_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      accept: \"images/*\",\n      onChange: fileUploadAndResize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(FileUpload, \"bKYurygciIh9ANN/HDPrLSrSEyw=\", false, function () {\n  return [useSelector];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Resizer","axios","useSelector","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","id","images","setImages","_s","user","state","loading","setLoading","fileUploadAndResize","e","preventDefault","files","target","allUploadedFiles","urls","idToken","token","i","length","imageFileResizer","uri","post","process","env","REACT_APP_API","image","headers","then","res","status","public_id","url","message","data","success","push","error","catch","children","htmlFor","className","type","multiple","hidden","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","Badge","count","onClick","handleImageRemove","style","cursor","Avatar","src","size","shape","_c","$RefreshReg$"],"sources":["/Users/venkat/Downloads/React/Food_App/react_app/src/Pages/Partner/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport './index.css';\n\nconst FileUpload = ({ id, images, setImages }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [loading, setLoading] = useState(false);\n\n    const fileUploadAndResize = (e) => {\n        e.preventDefault();\n        let files = e.target.files; // 3\n        let allUploadedFiles = (images && images.urls) || [];\n        let idToken = user ? user.token : '';\n\n        if (files) {\n            setLoading(true);\n            for (let i = 0; i < files.length; i++) {\n                Resizer.imageFileResizer(\n                    files[i],\n                    720,\n                    720,\n                    'JPEG',\n                    100,\n                    0,\n                    (uri) => {\n                        axios\n                            .post(\n                                `${process.env.REACT_APP_API}/uploadimages`,\n                                { image: uri },\n                                {\n                                    headers: {\n                                        idToken\n                                    },\n                                }\n                            )\n                            .then((res) => {\n                                if (res.status === 200) {\n                                    const { public_id, url, message } = res.data;\n                                    toast.success(message);\n                                    allUploadedFiles.push({ public_id, url });\n                                    setImages({ ...images, urls: allUploadedFiles });\n                                    // localStorage.setItem('uploadedImages', { ...images, urls: allUploadedFiles });\n                                } else {\n                                    toast.error(res.data.message);\n                                }\n                                setLoading(false);\n                            })\n                            .catch((error) => {\n                                setLoading(false);\n                                toast.error(error);\n                            });\n                    },\n                    'base64'\n                );\n            }\n        }\n        // send back to server to upload to cloudinary\n        // set url to images[] in the parent component state - ProductCreate\n    };\n\n    return (\n        <>\n            <label htmlFor={id} className='btn btn-filled btn-raised'>\n                Choose File\n                <input\n                    id={id}\n                    type='file'\n                    multiple\n                    hidden\n                    accept='images/*'\n                    onChange={fileUploadAndResize}\n                />\n            </label>\n            <div className='mt-3'>\n                {images && images.urls &&\n                    images.urls.map((image) => (\n                        <>\n                            <Badge\n                                count='X'\n                                key={image.public_id}\n                                onClick={() => handleImageRemove(image.public_id)}\n                                style={{ cursor: 'pointer' }}\n                            >\n                                <Avatar\n                                    src={image.url}\n                                    size={100}\n                                    shape='square'\n                                    className='ml-3'\n                                />\n                            </Badge>\n                        </>\n                    ))}\n            </div>\n\n\n            <input\n                id={id}\n                type='file'\n                multiple\n                hidden\n                accept='images/*'\n                onChange={fileUploadAndResize}\n            />\n\n        </>\n    );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}