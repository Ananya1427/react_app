{"ast":null,"code":"var _jsxFileName = \"/Users/venkat/Downloads/React/Food_App/react_app/src/Pages/Partner/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Badge } from 'antd';\nimport { toast } from 'react-toastify';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  id,\n  images,\n  setImages,\n  signUp\n}) => {\n  _s();\n  const {\n    user\n  } = useSelector(state => ({\n    ...state\n  }));\n  const [loading, setLoading] = useState(false);\n  const fileUploadAndResize = e => {\n    e.preventDefault();\n    let files = e.target.files; // 3\n    let allUploadedFiles = images && images.urls || [];\n    let idToken = user ? user.token : '';\n    if (files) {\n      setLoading(true);\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(files[i], 188, 106, 'JPEG', 100, 0, uri => {\n          axios.post(`${process.env.REACT_APP_API}/uploadimages`, {\n            image: uri\n          }, {\n            headers: {\n              idToken\n            }\n          }).then(res => {\n            if (res.status === 200) {\n              const {\n                public_id,\n                url,\n                message\n              } = res.data;\n              toast.success(message);\n              allUploadedFiles.push({\n                public_id,\n                url\n              });\n              setImages({\n                ...images,\n                urls: allUploadedFiles\n              });\n              // localStorage.setItem('uploadedImages', { ...images, urls: allUploadedFiles });\n            } else {\n              toast.error(res.data.message);\n            }\n            setLoading(false);\n          }).catch(error => {\n            setLoading(false);\n            toast.error(error);\n          });\n        }, 'base64');\n      }\n    }\n    // send back to server to upload to cloudinary\n    // set url to images[] in the parent component state - ProductCreate\n  };\n\n  const handleImageRemove = public_id => {\n    let idToken = user ? user.token : '';\n    setLoading(true);\n    axios.post(`${process.env.REACT_APP_API}/removeimage`, {\n      public_id\n    }, {\n      headers: {\n        idToken\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        toast.success(res.data.message);\n        const {\n          urls\n        } = images;\n        let filteredImages = urls.filter(item => {\n          return item.public_id !== public_id;\n        });\n        setImages({\n          ...images,\n          urls: filteredImages\n        });\n        // localStorage.setItem('uploadedImages', { ...images, urls: filteredImages });\n      } else {\n        toast.error(res.data.message);\n      }\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      toast.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: signUp ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        className: \"btn btn-filled btn-raised\",\n        children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: id,\n          type: \"file\",\n          multiple: true,\n          hidden: true,\n          accept: \"images/*\",\n          onChange: fileUploadAndResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: images && images.urls && images.urls.map(image => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            count: \"X\",\n            onClick: () => handleImageRemove(image.public_id),\n            style: {\n              cursor: 'pointer'\n            },\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: image.url,\n              size: 100,\n              shape: \"square\",\n              className: \"ml-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this)\n          }, image.public_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      accept: \"images/*\",\n      onChange: fileUploadAndResize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(FileUpload, \"bKYurygciIh9ANN/HDPrLSrSEyw=\", false, function () {\n  return [useSelector];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Resizer","axios","useSelector","Avatar","Badge","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","id","images","setImages","signUp","_s","user","state","loading","setLoading","fileUploadAndResize","e","preventDefault","files","target","allUploadedFiles","urls","idToken","token","i","length","imageFileResizer","uri","post","process","env","REACT_APP_API","image","headers","then","res","status","public_id","url","message","data","success","push","error","catch","handleImageRemove","filteredImages","filter","item","children","htmlFor","className","type","multiple","hidden","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","count","onClick","style","cursor","src","size","shape","_c","$RefreshReg$"],"sources":["/Users/venkat/Downloads/React/Food_App/react_app/src/Pages/Partner/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Badge } from 'antd';\nimport { toast } from 'react-toastify';\n\nimport './index.css';\n\nconst FileUpload = ({ id, images, setImages, signUp }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [loading, setLoading] = useState(false);\n\n    const fileUploadAndResize = (e) => {\n        e.preventDefault();\n        let files = e.target.files; // 3\n        let allUploadedFiles = (images && images.urls) || [];\n        let idToken = user ? user.token : '';\n\n        if (files) {\n            setLoading(true);\n            for (let i = 0; i < files.length; i++) {\n                Resizer.imageFileResizer(\n                    files[i],\n                    188,\n                    106,\n                    'JPEG',\n                    100,\n                    0,\n                    (uri) => {\n                        axios\n                            .post(\n                                `${process.env.REACT_APP_API}/uploadimages`,\n                                { image: uri },\n                                {\n                                    headers: {\n                                        idToken\n                                    },\n                                }\n                            )\n                            .then((res) => {\n                                if (res.status === 200) {\n                                    const { public_id, url, message } = res.data;\n                                    toast.success(message);\n                                    allUploadedFiles.push({ public_id, url });\n                                    setImages({ ...images, urls: allUploadedFiles });\n                                    // localStorage.setItem('uploadedImages', { ...images, urls: allUploadedFiles });\n                                } else {\n                                    toast.error(res.data.message);\n                                }\n                                setLoading(false);\n                            })\n                            .catch((error) => {\n                                setLoading(false);\n                                toast.error(error);\n                            });\n                    },\n                    'base64'\n                );\n            }\n        }\n        // send back to server to upload to cloudinary\n        // set url to images[] in the parent component state - ProductCreate\n    };\n\n    const handleImageRemove = (public_id) => {\n        let idToken = user ? user.token : '';\n        setLoading(true);\n        axios\n            .post(\n                `${process.env.REACT_APP_API}/removeimage`,\n                { public_id },\n                {\n                    headers: {\n                        idToken\n                    },\n                }\n            )\n            .then((res) => {\n                if (res.status === 200) {\n                    toast.success(res.data.message);\n                    const { urls } = images;\n                    let filteredImages = urls.filter((item) => {\n                        return item.public_id !== public_id;\n                    });\n                    setImages({ ...images, urls: filteredImages });\n                    // localStorage.setItem('uploadedImages', { ...images, urls: filteredImages });\n                } else {\n                    toast.error(res.data.message);\n                }\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                toast.error(error);\n\n            });\n    };\n\n    return (\n        <>\n            {signUp ? (\n                <>\n                    <label htmlFor={id} className='btn btn-filled btn-raised'>\n                        Choose File\n                        <input\n                            id={id}\n                            type='file'\n                            multiple\n                            hidden\n                            accept='images/*'\n                            onChange={fileUploadAndResize}\n                        />\n                    </label>\n                    <div className='mt-3'>\n                        {images && images.urls &&\n                            images.urls.map((image) => (\n                                <>\n                                    <Badge\n                                        count='X'\n                                        key={image.public_id}\n                                        onClick={() => handleImageRemove(image.public_id)}\n                                        style={{ cursor: 'pointer' }}\n                                    >\n                                        <Avatar\n                                            src={image.url}\n                                            size={100}\n                                            shape='square'\n                                            className='ml-3'\n                                        />\n                                    </Badge>\n                                </>\n                            ))}\n                    </div>\n                </>\n            ) : <input\n                id={id}\n                type='file'\n                multiple\n                hidden\n                accept='images/*'\n                onChange={fileUploadAndResize}\n            />}\n\n        </>\n    );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}