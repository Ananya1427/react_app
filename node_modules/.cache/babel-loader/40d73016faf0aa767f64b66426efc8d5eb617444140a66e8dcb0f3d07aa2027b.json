{"ast":null,"code":"var _jsxFileName = \"/Users/venkat/Downloads/React/Food_App/react_app/src/Pages/Partner/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Badge } from 'antd';\nimport { toast } from 'react-toastify';\nimport banner from '../../Assets/add_photos.svg';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  id,\n  images,\n  setImages,\n  setLoading\n}) => {\n  _s();\n  const {\n    user\n  } = useSelector(state => ({\n    ...state\n  }));\n  const fileUploadAndResize = e => {\n    e.preventDefault();\n    let files = e.target.files; // 3\n    let allUploadedFiles = images.urls || [];\n    let idToken = user ? user.token : '';\n    if (files) {\n      setLoading(true);\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(files[i], 720, 720, 'JPEG', 100, 0, uri => {\n          axios.post(`${process.env.REACT_APP_API}/uploadimages`, {\n            image: uri\n          }, {\n            headers: {\n              idToken\n            }\n          }).then(res => {\n            if (res.status === 200) {\n              const {\n                public_id,\n                url,\n                message\n              } = res.data;\n              toast.success(message);\n              allUploadedFiles.push({\n                public_id,\n                url\n              });\n              setImages({\n                ...images,\n                urls: allUploadedFiles\n              });\n              // localStorage.setItem('uploadedImages', { ...images, urls: allUploadedFiles });\n            } else {\n              toast.error(res.data.message);\n            }\n            setLoading(false);\n          }).catch(error => {\n            setLoading(false);\n            toast.error(error);\n          });\n        }, 'base64');\n      }\n    }\n    // send back to server to upload to cloudinary\n    // set url to images[] in the parent component state - ProductCreate\n  };\n\n  const handleImageRemove = public_id => {\n    let idToken = user ? user.token : '';\n    setLoading(true);\n    axios.post(`${process.env.REACT_APP_API}/removeimage`, {\n      public_id\n    }, {\n      headers: {\n        idToken\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        toast.success(res.data.message);\n        const {\n          urls\n        } = images;\n        let filteredImages = urls.filter(item => {\n          return item.public_id !== public_id;\n        });\n        setImages({\n          ...images,\n          urls: filteredImages\n        });\n        // localStorage.setItem('uploadedImages', { ...images, urls: filteredImages });\n      } else {\n        toast.error(res.data.message);\n      }\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      toast.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fw-light d-inline\",\n        children: 'Drag & Drop to upload or '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        children: [' Browse', /*#__PURE__*/_jsxDEV(\"input\", {\n          id: id,\n          type: \"file\",\n          multiple: true,\n          hidden: true,\n          accept: \"images/*\",\n          onChange: fileUploadAndResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        className: \"d-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          htmlFor: id,\n          src: banner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: id,\n          type: \"file\",\n          multiple: true,\n          hidden: true,\n          accept: \"images/*\",\n          onChange: fileUploadAndResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n};\n_s(FileUpload, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","Resizer","axios","useSelector","Avatar","Badge","toast","banner","jsxDEV","_jsxDEV","FileUpload","id","images","setImages","setLoading","_s","user","state","fileUploadAndResize","e","preventDefault","files","target","allUploadedFiles","urls","idToken","token","i","length","imageFileResizer","uri","post","process","env","REACT_APP_API","image","headers","then","res","status","public_id","url","message","data","success","push","error","catch","handleImageRemove","filteredImages","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","multiple","hidden","accept","onChange","src","_c","$RefreshReg$"],"sources":["/Users/venkat/Downloads/React/Food_App/react_app/src/Pages/Partner/FileUpload.js"],"sourcesContent":["import React from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Badge } from 'antd';\nimport { toast } from 'react-toastify';\n\nimport banner from '../../Assets/add_photos.svg';\nimport './index.css';\n\nconst FileUpload = ({ id, images, setImages, setLoading }) => {\n\tconst { user } = useSelector((state) => ({ ...state }));\n\n\tconst fileUploadAndResize = (e) => {\n\t\te.preventDefault();\n\t\tlet files = e.target.files; // 3\n\t\tlet allUploadedFiles = images.urls || [];\n\t\tlet idToken = user ? user.token : '';\n\n\t\tif (files) {\n\t\t\tsetLoading(true);\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tResizer.imageFileResizer(\n\t\t\t\t\tfiles[i],\n\t\t\t\t\t720,\n\t\t\t\t\t720,\n\t\t\t\t\t'JPEG',\n\t\t\t\t\t100,\n\t\t\t\t\t0,\n\t\t\t\t\t(uri) => {\n\t\t\t\t\t\taxios\n\t\t\t\t\t\t\t.post(\n\t\t\t\t\t\t\t\t`${process.env.REACT_APP_API}/uploadimages`,\n\t\t\t\t\t\t\t\t{ image: uri },\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\tidToken\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\t\tif (res.status === 200) {\n\t\t\t\t\t\t\t\t\tconst { public_id, url, message } = res.data;\n\t\t\t\t\t\t\t\t\ttoast.success(message);\n\t\t\t\t\t\t\t\t\tallUploadedFiles.push({ public_id, url });\n\t\t\t\t\t\t\t\t\tsetImages({ ...images, urls: allUploadedFiles });\n\t\t\t\t\t\t\t\t\t// localStorage.setItem('uploadedImages', { ...images, urls: allUploadedFiles });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttoast.error(res.data.message);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t\t\ttoast.error(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t'base64'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t// send back to server to upload to cloudinary\n\t\t// set url to images[] in the parent component state - ProductCreate\n\t};\n\n\tconst handleImageRemove = (public_id) => {\n\t\tlet idToken = user ? user.token : '';\n\t\tsetLoading(true);\n\t\taxios\n\t\t\t.post(\n\t\t\t\t`${process.env.REACT_APP_API}/removeimage`,\n\t\t\t\t{ public_id },\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tidToken\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\ttoast.success(res.data.message);\n\t\t\t\t\tconst { urls } = images;\n\t\t\t\t\tlet filteredImages = urls.filter((item) => {\n\t\t\t\t\t\treturn item.public_id !== public_id;\n\t\t\t\t\t});\n\t\t\t\t\tsetImages({ ...images, urls: filteredImages });\n\t\t\t\t\t// localStorage.setItem('uploadedImages', { ...images, urls: filteredImages });\n\t\t\t\t} else {\n\t\t\t\t\ttoast.error(res.data.message);\n\t\t\t\t}\n\t\t\t\tsetLoading(false);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetLoading(false);\n\t\t\t\ttoast.error(error);\n\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className='file-upload'>\n            <div className='my-3'>\n                <p className='fw-light d-inline'>{'Drag & Drop to upload or '}</p>\n                <label htmlFor={id}>\n                    {' Browse'}\n                    <input\n                        id={id}\n                        type='file'\n                        multiple\n                        hidden\n                        accept='images/*'\n                        onChange={fileUploadAndResize}\n                    />\n                </label>\n            </div>\n\t\t\t<div>\n                <label htmlFor={id} className='d-block'>\n                    <img htmlFor={id} src={banner} />\n                    <input\n                        id={id}\n                        type='file'\n                        multiple\n                        hidden\n                        accept='images/*'\n                        onChange={fileUploadAndResize}\n                    />\n                </label>\n            </div>\n\t\t</div>\n\t);\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}