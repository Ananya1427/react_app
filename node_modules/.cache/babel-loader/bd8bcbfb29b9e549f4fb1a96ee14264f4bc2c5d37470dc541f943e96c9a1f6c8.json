{"ast":null,"code":"var _jsxFileName = \"/Users/venkat/Downloads/React/Food_App/react_app/src/Pages/Partner/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  id,\n  images,\n  setImages\n}) => {\n  _s();\n  const {\n    user\n  } = useSelector(state => ({\n    ...state\n  }));\n  const [loading, setLoading] = useState(false);\n  const fileUploadAndResize = e => {\n    e.preventDefault();\n    let files = e.target.files; // 3\n    let allUploadedFiles = images && images.urls || [];\n    let idToken = user ? user.token : '';\n    if (files) {\n      setLoading(true);\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(files[i], 720, 720, 'JPEG', 100, 0, uri => {\n          axios.post(`${process.env.REACT_APP_API}/uploadimages`, {\n            image: uri\n          }, {\n            headers: {\n              idToken\n            }\n          }).then(res => {\n            if (res.status === 200) {\n              const {\n                public_id,\n                url,\n                message\n              } = res.data;\n              toast.success(message);\n              allUploadedFiles.push({\n                public_id,\n                url\n              });\n              setImages({\n                ...images,\n                urls: allUploadedFiles\n              });\n              // localStorage.setItem('uploadedImages', { ...images, urls: allUploadedFiles });\n            } else {\n              toast.error(res.data.message);\n            }\n            setLoading(false);\n          }).catch(error => {\n            setLoading(false);\n            toast.error(error);\n          });\n        }, 'base64');\n      }\n    }\n    // send back to server to upload to cloudinary\n    // set url to images[] in the parent component state - ProductCreate\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className='col-12 my-3 mb-md-1 px-3 text-center shadow-sm py-3 file-upload'>\n    //     <div className=''>\n    //         <p className='fw-light d-inline'>{'Drag & Drop to upload or '}</p>\n    //         <label htmlFor={id} className='text-decoration-underline'>\n    //             {' Browse'}\n    //             <input\n    //                 id={id}\n    //                 type='file'\n    //                 multiple\n    //                 hidden\n    //                 accept='images/*'\n    //                 onChange={fileUploadAndResize}\n    //             />\n    //         </label>\n    //     </div>\n    //     <div className='text-center p-5'>\n    //         {images && images.urls &&\n    //             images.urls.map((image) => (\n    //                 <>\n    //                     <Badge\n    //                         count='X'\n    //                         key={image.public_id}\n    //                         onClick={() => handleImageRemove(image.public_id)}\n    //                         style={{ cursor: 'pointer' }}\n    //                     >\n    //                         <Avatar\n    //                             src={image.url}\n    //                             size={100}\n    //                             shape='square'\n    //                             className='ml-3'\n    //                         />\n    //                     </Badge>\n    //                 </>\n    //             ))}\n    //         <label htmlFor={id}>\n    //             <img htmlFor={id} src={banner} />\n    //             <input\n    //                 id={id}\n    //                 type='file'\n    //                 multiple\n    //                 hidden\n    //                 accept='images/*'\n    //                 onChange={fileUploadAndResize}\n    //             />\n    //         </label>\n    //     </div>\n    // </div>\n    _jsxDEV(\"input\", {\n      id: id,\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      accept: \"images/*\",\n      onChange: fileUploadAndResize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(FileUpload, \"bKYurygciIh9ANN/HDPrLSrSEyw=\", false, function () {\n  return [useSelector];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Resizer","axios","useSelector","toast","jsxDEV","_jsxDEV","FileUpload","id","images","setImages","_s","user","state","loading","setLoading","fileUploadAndResize","e","preventDefault","files","target","allUploadedFiles","urls","idToken","token","i","length","imageFileResizer","uri","post","process","env","REACT_APP_API","image","headers","then","res","status","public_id","url","message","data","success","push","error","catch","type","multiple","hidden","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/venkat/Downloads/React/Food_App/react_app/src/Pages/Partner/FileUpload.js"],"sourcesContent":["import React, { useState} from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport './index.css';\n\nconst FileUpload = ({ id, images, setImages }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [loading, setLoading] = useState(false);\n\n    const fileUploadAndResize = (e) => {\n        e.preventDefault();\n        let files = e.target.files; // 3\n        let allUploadedFiles = images && images.urls || [];\n        let idToken = user ? user.token : '';\n\n        if (files) {\n            setLoading(true);\n            for (let i = 0; i < files.length; i++) {\n                Resizer.imageFileResizer(\n                    files[i],\n                    720,\n                    720,\n                    'JPEG',\n                    100,\n                    0,\n                    (uri) => {\n                        axios\n                            .post(\n                                `${process.env.REACT_APP_API}/uploadimages`,\n                                { image: uri },\n                                {\n                                    headers: {\n                                        idToken\n                                    },\n                                }\n                            )\n                            .then((res) => {\n                                if (res.status === 200) {\n                                    const { public_id, url, message } = res.data;\n                                    toast.success(message);\n                                    allUploadedFiles.push({ public_id, url });\n                                    setImages({ ...images, urls: allUploadedFiles });\n                                    // localStorage.setItem('uploadedImages', { ...images, urls: allUploadedFiles });\n                                } else {\n                                    toast.error(res.data.message);\n                                }\n                                setLoading(false);\n                            })\n                            .catch((error) => {\n                                setLoading(false);\n                                toast.error(error);\n                            });\n                    },\n                    'base64'\n                );\n            }\n        }\n        // send back to server to upload to cloudinary\n        // set url to images[] in the parent component state - ProductCreate\n    };\n\n    return (\n        // <div className='col-12 my-3 mb-md-1 px-3 text-center shadow-sm py-3 file-upload'>\n        //     <div className=''>\n        //         <p className='fw-light d-inline'>{'Drag & Drop to upload or '}</p>\n        //         <label htmlFor={id} className='text-decoration-underline'>\n        //             {' Browse'}\n        //             <input\n        //                 id={id}\n        //                 type='file'\n        //                 multiple\n        //                 hidden\n        //                 accept='images/*'\n        //                 onChange={fileUploadAndResize}\n        //             />\n        //         </label>\n        //     </div>\n        //     <div className='text-center p-5'>\n        //         {images && images.urls &&\n        //             images.urls.map((image) => (\n        //                 <>\n        //                     <Badge\n        //                         count='X'\n        //                         key={image.public_id}\n        //                         onClick={() => handleImageRemove(image.public_id)}\n        //                         style={{ cursor: 'pointer' }}\n        //                     >\n        //                         <Avatar\n        //                             src={image.url}\n        //                             size={100}\n        //                             shape='square'\n        //                             className='ml-3'\n        //                         />\n        //                     </Badge>\n        //                 </>\n        //             ))}\n        //         <label htmlFor={id}>\n        //             <img htmlFor={id} src={banner} />\n        //             <input\n        //                 id={id}\n        //                 type='file'\n        //                 multiple\n        //                 hidden\n        //                 accept='images/*'\n        //                 onChange={fileUploadAndResize}\n        //             />\n        //         </label>\n        //     </div>\n        // </div>\n        <input\n            id={id}\n            type='file'\n            multiple\n            hidden\n            accept='images/*'\n            onChange={fileUploadAndResize}\n        />\n    );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}